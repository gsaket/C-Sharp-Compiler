compilation_unit 
using_directives_opt namespace_member_declarations 
using_directives_opt namespace_member_declaration 
using_directives_opt namespace_declaration 
using_directives_opt NAMESPACE qualified_identifier namespace_body comma_opt 
using_directives_opt NAMESPACE qualified_identifier namespace_body eps 
using_directives_opt NAMESPACE qualified_identifier namespace_body 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt namespace_member_declarations_opt '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt namespace_member_declarations '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt namespace_member_declaration '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt type_declaration '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt class_declaration '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt class_body comma_opt '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt class_body eps '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt class_body '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' class_member_declarations_opt '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' class_member_declarations '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' class_member_declaration '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_declaration '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header method_body '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header block '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list_opt '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list statement '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list embedded_statement '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list expression_statement '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list statement_expression ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list invocation_expression ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list qualified_identifier '(' argument_list_opt ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list qualified_identifier '(' eps ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list qualified_identifier '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list qualifier IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list statement IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list embedded_statement IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list iteration_statement IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list for_statement IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' embedded_statement IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' block IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' statement_list_opt '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' statement_list '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' statement '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' embedded_statement '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' expression_statement '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' statement_expression ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' invocation_expression ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list_opt ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA argument ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA conditional_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA conditional_or_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA conditional_and_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA inclusive_or_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA exclusive_or_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA and_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA equality_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA relational_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA shift_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA additive_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA multiplicative_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA unary_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA unary_expression_not_plusminus ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA postfix_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA primary_expression ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA primary_expression_no_parenthesis ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA element_access ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET expression_list RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET conditional_expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET conditional_or_expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET conditional_and_expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET inclusive_or_expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET exclusive_or_expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET and_expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET equality_expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET relational_expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET shift_expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET additive_expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET multiplicative_expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET unary_expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET unary_expression_not_plusminus RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET postfix_expression RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET qualified_identifier RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA argument COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA conditional_expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA conditional_or_expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA conditional_and_expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA inclusive_or_expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA exclusive_or_expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA and_expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA equality_expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA relational_expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA shift_expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA additive_expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA multiplicative_expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA unary_expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA unary_expression_not_plusminus COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA postfix_expression COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA qualified_identifier COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument_list COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' argument COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' conditional_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' conditional_or_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' conditional_and_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' inclusive_or_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' exclusive_or_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' and_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' equality_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' relational_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' shift_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' additive_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' multiplicative_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' unary_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' unary_expression_not_plusminus COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' postfix_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' primary_expression COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' primary_expression_no_parenthesis COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' literal COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualifier IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' statement_expression_list ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' statement_expression ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' pre_increment_expression ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' PLUSPLUS unary_expression ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' PLUSPLUS unary_expression_not_plusminus ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' PLUSPLUS postfix_expression ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' PLUSPLUS qualified_identifier ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' boolean_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' conditional_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' conditional_or_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' conditional_and_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' inclusive_or_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' exclusive_or_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' and_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' equality_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' shift_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' additive_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' multiplicative_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' unary_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' unary_expression_not_plusminus ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' postfix_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' primary_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' primary_expression_no_parenthesis ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' literal ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' shift_expression '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' additive_expression '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' multiplicative_expression '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' unary_expression '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' unary_expression_not_plusminus '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' postfix_expression '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' qualified_identifier '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' statement_expression_list ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' statement_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' assignment ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator conditional_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator conditional_or_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator conditional_and_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator inclusive_or_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator exclusive_or_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator and_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator equality_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator relational_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator shift_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator additive_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator multiplicative_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator unary_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator unary_expression_not_plusminus ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator postfix_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator primary_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator primary_expression_no_parenthesis ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator literal ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression_not_plusminus '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' postfix_expression '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' qualified_identifier '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list statement FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list embedded_statement FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list iteration_statement FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list for_statement FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' embedded_statement FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' block FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' statement_list_opt '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' statement_list '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' statement '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' embedded_statement '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' expression_statement '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' statement_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' assignment ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator conditional_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator conditional_or_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator conditional_and_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator inclusive_or_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator exclusive_or_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator and_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator equality_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator relational_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator shift_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator additive_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator additive_expression '+' multiplicative_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator additive_expression '+' unary_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator additive_expression '+' unary_expression_not_plusminus ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator additive_expression '+' postfix_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator additive_expression '+' primary_expression ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator additive_expression '+' primary_expression_no_parenthesis ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator additive_expression '+' literal ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator additive_expression '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator multiplicative_expression '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator unary_expression '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator unary_expression_not_plusminus '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator postfix_expression '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator qualified_identifier '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression assignment_operator IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' unary_expression_not_plusminus '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' postfix_expression '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' primary_expression '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' primary_expression_no_parenthesis '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' element_access '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET expression_list RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET conditional_expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET conditional_or_expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET conditional_and_expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET inclusive_or_expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET exclusive_or_expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET and_expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET equality_expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET relational_expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET shift_expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET additive_expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET multiplicative_expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET unary_expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET unary_expression_not_plusminus RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET postfix_expression RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET qualified_identifier RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' qualified_identifier LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator_opt ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' for_iterator ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' statement_expression_list ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' statement_expression ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' pre_increment_expression ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' PLUSPLUS unary_expression ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' PLUSPLUS unary_expression_not_plusminus ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' PLUSPLUS postfix_expression ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' PLUSPLUS qualified_identifier ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition_opt ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' for_condition ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' boolean_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' conditional_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' conditional_or_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' conditional_and_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' inclusive_or_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' exclusive_or_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' and_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' equality_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' shift_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' additive_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' multiplicative_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' unary_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' unary_expression_not_plusminus ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' postfix_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' primary_expression ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' primary_expression_no_parenthesis ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' literal ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' relational_expression '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' shift_expression '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' additive_expression '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' multiplicative_expression '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' unary_expression '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' unary_expression_not_plusminus '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' postfix_expression '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' qualified_identifier '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer_opt ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' for_initializer ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' statement_expression_list ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' statement_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' assignment ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator conditional_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator conditional_or_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator conditional_and_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator inclusive_or_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator exclusive_or_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator and_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator equality_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator relational_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator shift_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator additive_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator multiplicative_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator unary_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator unary_expression_not_plusminus ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator postfix_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator primary_expression ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator primary_expression_no_parenthesis ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator literal ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression assignment_operator INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' unary_expression_not_plusminus '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' postfix_expression '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' qualified_identifier '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list statement FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list declaration_statement FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list local_variable_declaration ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list type variable_declarators ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list type variable_declarator ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list type IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list non_array_type IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list simple_type IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list primitive_type IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list numeric_type IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list integral_type IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list statement INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list declaration_statement INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list local_variable_declaration ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list type variable_declarators ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list type variable_declarators COMMA variable_declarator ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list type variable_declarators COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list type variable_declarator COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list type IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list non_array_type IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list simple_type IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list primitive_type IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list numeric_type IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list integral_type IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement_list INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' statement INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' declaration_statement INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' local_variable_declaration ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type variable_declarators ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type variable_declarator ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' variable_initializer ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' conditional_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' conditional_or_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' conditional_and_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' inclusive_or_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' exclusive_or_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' and_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' equality_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' relational_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' shift_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' additive_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' multiplicative_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' unary_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' unary_expression_not_plusminus ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' postfix_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' primary_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' primary_expression_no_parenthesis ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' array_creation_expression ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET expression_list RIGHT_BRACKET rank_specifiers_opt array_initializer_opt ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET expression_list RIGHT_BRACKET rank_specifiers_opt eps ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET expression_list RIGHT_BRACKET rank_specifiers_opt ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET expression_list RIGHT_BRACKET eps ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET expression_list RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET conditional_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET conditional_or_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET conditional_and_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET inclusive_or_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET exclusive_or_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET and_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET equality_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET relational_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET shift_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET additive_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET multiplicative_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET unary_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET unary_expression_not_plusminus RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET postfix_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET primary_expression RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET primary_expression_no_parenthesis RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET literal RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW non_array_type LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW simple_type LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW primitive_type LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW numeric_type LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW integral_type LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' type IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' array_type IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' simple_type rank_specifier IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' simple_type RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' primitive_type RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' numeric_type RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' integral_type RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' method_header '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' modifiers_opt VOID qualified_identifier '(' formal_parameter_list_opt ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' modifiers_opt VOID qualified_identifier '(' formal_parameter_list ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' modifiers_opt VOID qualified_identifier '(' formal_parameter ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' modifiers_opt VOID qualified_identifier '(' fixed_parameter ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' modifiers_opt VOID qualified_identifier '(' parameter_modifier_opt type IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' modifiers_opt VOID qualified_identifier '(' parameter_modifier_opt array_type IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' modifiers_opt VOID qualified_identifier '(' parameter_modifier_opt simple_type rank_specifier IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' modifiers_opt VOID qualified_identifier '(' parameter_modifier_opt simple_type RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' modifiers_opt VOID qualified_identifier '(' parameter_modifier_opt class_type RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' modifiers_opt VOID qualified_identifier '(' parameter_modifier_opt STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' modifiers_opt VOID qualified_identifier '(' eps STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' modifiers_opt VOID qualified_identifier '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' modifiers_opt VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' eps VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER class_base_opt '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER eps '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt modifiers_opt CLASS IDENTIFIER '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt eps CLASS IDENTIFIER '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' using_directives_opt CLASS IDENTIFIER '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' eps CLASS IDENTIFIER '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE qualified_identifier '{' CLASS IDENTIFIER '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives_opt NAMESPACE IDENTIFIER '{' CLASS IDENTIFIER '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directives NAMESPACE IDENTIFIER '{' CLASS IDENTIFIER '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_directive NAMESPACE IDENTIFIER '{' CLASS IDENTIFIER '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
using_namespace_directive NAMESPACE IDENTIFIER '{' CLASS IDENTIFIER '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
USING namespace_name ';' NAMESPACE IDENTIFIER '{' CLASS IDENTIFIER '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
USING qualified_identifier ';' NAMESPACE IDENTIFIER '{' CLASS IDENTIFIER '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
USING IDENTIFIER ';' NAMESPACE IDENTIFIER '{' CLASS IDENTIFIER '{' VOID IDENTIFIER '(' STRING_TYPE RANK_SPECIFIER IDENTIFIER ')' '{' INT_TYPE RANK_SPECIFIER IDENTIFIER '=' NEW INT_TYPE LEFT_BRACKET INTEGER_LITERAL RIGHT_BRACKET ';' INT_TYPE IDENTIFIER COMMA IDENTIFIER ';' INT_TYPE IDENTIFIER ';' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET '=' IDENTIFIER '+' INTEGER_LITERAL ';' '}' FOR '(' IDENTIFIER '=' INTEGER_LITERAL ';' IDENTIFIER '<' INTEGER_LITERAL ';' PLUSPLUS IDENTIFIER ')' '{' IDENTIFIER '.' IDENTIFIER '(' STRING_LITERAL COMMA IDENTIFIER COMMA IDENTIFIER LEFT_BRACKET IDENTIFIER RIGHT_BRACKET ')' ';' '}' IDENTIFIER '.' IDENTIFIER '(' ')' ';' '}' '}' '}' 
